{"version":3,"sources":["ErrorMessage.js","App.js","index.js"],"names":["ErrorMessage","error","type","App","useForm","register","handleSubmit","errors","isSubmitting","formState","sleep","ms","Promise","resolve","setTimeout","validateUserName","value","a","className","onSubmit","data","e","alert","JSON","stringify","target","reset","name","ref","required","minLength","maxLength","pattern","firstName","lastName","gender","onBlur","validate","username","email","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEe,SAASA,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,GAAIA,EACF,OAAQA,EAAMC,MACZ,IAAK,WACH,OAAO,iDACT,IAAK,YACH,OAAO,oEACT,IAAK,YACH,OAAO,2EACT,IAAK,UACH,OAAO,mDACT,IAAK,MACH,OAAO,kDACT,IAAK,WACH,OAAO,yDACT,QACE,OAAO,KAIb,OAAO,KChBM,SAASC,IAAO,IAAD,EAMxBC,cAJFC,EAF0B,EAE1BA,SACAC,EAH0B,EAG1BA,aACAC,EAJ0B,EAI1BA,OACaC,EALa,EAK1BC,UAAaD,aAETE,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OASzDI,EAAgB,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACjBP,EAAM,KADW,UAET,KAAVM,EAFmB,0CAEE,GAFF,iCAGhB,GAHgB,2CAAH,sDAMtB,OACE,uBAAME,UAAU,MAAMC,SAAUb,GAdjB,SAACc,EAAMC,GAGtBC,MAAMC,KAAKC,UAAUJ,IACrBC,EAAEI,OAAOC,WAUT,UACE,yCACA,gDACA,uBACEC,KAAK,YACLC,IAAKvB,EAAS,CACZwB,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,QAAS,mBAGb,cAAChC,EAAD,CAAcC,MAAOM,EAAO0B,YAE5B,+CACA,uBACEN,KAAK,WACLC,IAAKvB,EAAS,CACZwB,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,QAAS,mBAGb,cAAChC,EAAD,CAAcC,MAAOM,EAAO2B,WAE5B,2CACA,yBAAQP,KAAK,SAASC,IAAKvB,EAAS,CAAEwB,UAAU,IAAhD,UACE,wBAAQb,MAAM,GAAd,uBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,uBAEF,cAAChB,EAAD,CAAcC,MAAOM,EAAO4B,SAE5B,6CACA,uBACER,KAAK,WACLS,OAAQ,SAAAf,GAAC,OAAIN,EAAiBM,EAAEI,OAAOT,QACvCY,IAAKvB,EAAS,CAAEwB,UAAU,EAAMQ,SAAUtB,MAE5C,cAACf,EAAD,CAAcC,MAAOM,EAAO+B,WAE5B,0CACA,uBACEX,KAAK,QACLC,IAAKvB,EAAS,CAAEwB,UAAU,EAAMG,QAAS,iBAE3C,cAAChC,EAAD,CAAcC,MAAOM,EAAOgC,QAE5B,8CACA,0BAAUZ,KAAK,WAAWC,IAAKvB,EAAS,CAAEwB,UAAU,MAEpD,uBAAO3B,KAAK,SAASsC,SAAUhC,OC5ErCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d4ea237d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage({ error }) {\n  if (error) {\n    switch (error.type) {\n      case 'required':\n        return <p>This is required</p>;\n      case 'minLength':\n        return <p>Your name need minmium 2 charcaters</p>;\n      case 'maxLength':\n        return <p>Your name should contain max 18 charcaters</p>;\n      case 'pattern':\n        return <p>Enter a valid data</p>;\n      case 'min':\n        return <p>Minmium age is 18</p>;\n      case 'validate':\n        return <p>Username is already used</p>;\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n","import './App.css';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport './App.css';\nimport ErrorMessage from './ErrorMessage';\n\nexport default function App() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    formState: { isSubmitting },\n  } = useForm();\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const onSubmit = (data, e) => {\n    // await sleep(1000);\n    // console.log(data);\n    alert(JSON.stringify(data));\n    e.target.reset();\n  };\n\n  const validateUserName = async value => {\n    await sleep(1000);\n    if (value === '') return false;\n    return true;\n  };\n\n  return (\n    <form className=\"App\" onSubmit={handleSubmit(onSubmit)}>\n      <h1>Sign Up</h1>\n      <label>First Name:</label>\n      <input\n        name=\"firstName\"\n        ref={register({\n          required: true,\n          minLength: 2,\n          maxLength: 16,\n          pattern: /^[A-Za-z]+$/i,\n        })}\n      />\n      <ErrorMessage error={errors.firstName} />\n\n      <label>Last Name:</label>\n      <input\n        name=\"lastName\"\n        ref={register({\n          required: true,\n          minLength: 2,\n          maxLength: 16,\n          pattern: /^[A-Za-z]+$/i,\n        })}\n      />\n      <ErrorMessage error={errors.lastName} />\n\n      <label>Gender</label>\n      <select name=\"gender\" ref={register({ required: true })}>\n        <option value=\"\">Select...</option>\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </select>\n      <ErrorMessage error={errors.gender} />\n\n      <label>Username</label>\n      <input\n        name=\"username\"\n        onBlur={e => validateUserName(e.target.value)}\n        ref={register({ required: true, validate: validateUserName })}\n      />\n      <ErrorMessage error={errors.username} />\n\n      <label>Email</label>\n      <input\n        name=\"email\"\n        ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n      />\n      <ErrorMessage error={errors.email} />\n\n      <label>About you</label>\n      <textarea name=\"aboutYou\" ref={register({ required: true })} />\n\n      <input type=\"submit\" disabled={isSubmitting} />\n    </form>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}